
modparam("htable", "htable", "methodOnlyMap=>size=8;autoexpire=HTABLE_AUTOEXPIRE")

route[METHOD] {
	if (is_method("INVITE")) {
		if ($sht(methodOnlyMap=>$rm) == $null) $sht(methodOnlyMap=>$rm) = 0;
		$sht(methodOnlyMap=>$rm) = $sht(methodOnlyMap=>$rm) + 1;

		if ($adu != $null) {
			/* Only invites with a Authorization or Proxy-Authorization header */
			if ($sht(methodOnlyMap=>INVITE-AUTH) == $null) $sht(methodOnlyMap=>INVITE-AUTH) = 0;
			$sht(methodOnlyMap=>INVITE-AUTH) = $sht(methodOnlyMap=>INVITE-AUTH) + 1;
		} 
		else if (has_totag()) {
			if ($sht(methodOnlyMap=>REINVITE) == $null) $sht(methodOnlyMap=>REINVITE) = 0;
			$sht(methodOnlyMap=>REINVITE) = $sht(methodOnlyMap=>REINVITE) + 1;
		}
	} else if (is_method("REGISTER")) {
		if ($sht(methodOnlyMap=>$rm) == $null) $sht(methodOnlyMap=>$rm) = 0;
		$sht(methodOnlyMap=>$rm) = $sht(methodOnlyMap=>$rm) + 1;

		if ($adu != $null) {
			if ($sht(methodOnlyMap=>REGISTER-AUTH) == $null) $sht(methodOnlyMap=>REGISTER-AUTH) = 0;
			$sht(methodOnlyMap=>REGISTER-AUTH) = $sht(methodOnlyMap=>REGISTER-AUTH) + 1;
		}

	} else {
		if ($sht(methodOnlyMap=>$rm) == $null) $sht(methodOnlyMap=>$rm) = 0;
		$sht(methodOnlyMap=>$rm) = $sht(methodOnlyMap=>$rm) + 1;
	}
}

route[STATS_METHOD] {
	$var(stats_elastic) = "";
	$var(stats_influxdb) = "";
	$var(type) = "stats_method";

	sht_iterator_start("i1", "methodOnlyMap");
	while (sht_iterator_next("i1")) {
		$var(method) = $shtitkey(i1);
		$var(value)  = $shtitval(i1);

		jansson_set("string", "host", "$var(host)", "$var(tmp_json)");
		jansson_set("string", "timestamp", "$var(isotime)", "$var(tmp_json)");
		jansson_set("string", "method", "$var(method)", "$var(tmp_json)");
		jansson_set("integer", "value", "$var(value)", "$var(tmp_json)");

		#!ifdef DO_ELASTICSEARCH
		$var(stats_elastic) = $var(stats_elastic) + " {\"index\": {\"_index\":\"homer-"+ $timef(%d.%m.%Y) +"\",\"_type\":\""+$var(type)+"\" }}\n";
		$var(stats_elastic) = $var(stats_elastic) + $var(tmp_json) + "\n";
		#!endif

		#!ifdef DO_GRAYLOG
		jansson_set("string", "timestamp", "$var(graylogTime)", "$var(tmp_json)");
		jansson_set("string", "short_message", "$var(type)", "$var(tmp_json)");
		$var(graylog_body) = $var(tmp_json);
		route(HTTP_POST);
		#!endif

		#!ifdef DO_INFLUXDB
		$var(stats_influxdb) = $_s($var(stats_influxdb)$var(type),$var(influxdbHost) );
		$var(stats_influxdb) = $_s($var(stats_influxdb)method="$var(method)",value=$var(value) $TV(s)$TV(u)) + "\n";
		#!endif

		$var(tmp_json) = 0;
		$var(graylog_body) = "";
	}
	sht_iterator_end("i1");
	sht_rm_name_re("methodOnlyMap=>.*");

	$var(elasticsearch_body) = $var(stats_elastic);
	$var(influxdb_body) = $var(stats_influxdb);

	$var(bulk) = 1;
	route(HTTP_POST);
	$var(bulk) = 0;
}